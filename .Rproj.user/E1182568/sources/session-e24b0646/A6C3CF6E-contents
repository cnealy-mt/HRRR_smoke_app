library(terra)
library(leaflet)
library(viridis)
library(lubridate)
library(RColorBrewer)

#------------------------------------AQI Scale-------------------------------------------

# AQI
breaks <- c(0, 9, 35.4, 55.4, 125.4, 225.4, 1000)
aqi_colors <- c(
  rgb(0, 228, 0, maxColorValue = 255),       # "Good"
  rgb(255, 255, 0, maxColorValue = 255),     # "Moderate"
  rgb(255, 126, 0, maxColorValue = 255),     # USG
  rgb(255, 0, 0, maxColorValue = 255),       # Unhealthy
  rgb(143, 63, 151, maxColorValue = 255),    # Very Unhealthy
  rgb(126, 0, 35, maxColorValue = 255)       # Hazardous
)

#------------------------------------AQI Trend Scale-------------------------------------------

# Define the discrete AQI trend steps
aqi_trend_values <- -5:5  # from -5 to +5

# Define the colors: green for negative, white at 0, red for positive
colors <- c(
  colorRampPalette(c("#006400", "#ADFF2F"))(5),  # 5 greens (-5 to -1)
  "white",                                      # 0
  colorRampPalette(c("#FFB6C1", "#8B0000"))(5)   # 5 reds (+1 to +5)
)

# Create the palette that maps exact values
aqi_trend_palette <- colorFactor(
  palette = colors,
  domain = aqi_trend_values,
  na.color = "transparent"
)

#------------------------------------Trend Scale-------------------------------------------
# the trend scale is custom fit to each variable and is therefore created in the trend mapping module

#------------------------------------Variable Scales-------------------------------------------

# MASSDEN
MASSDEN_breaks <- c(0, 1, 2, 4, 6, 8, 12, 16, 20, 25, 30, 40, 60, 100, 200, Inf)
MASSDEN_colors <- c("white", "#D6EAF8", "#AED6F1", "#5DADE2", "#2874A6", "#117A65", "#27AE60", "#A0E424", "#FFF284", "#FFAD41", "#FF950A", "#FF6A00", "#C60000", "#970000", "#9A00FF")
# Create color function
MASSDEN_color_fun <- colorBin(palette = MASSDEN_colors, bins = MASSDEN_breaks, na.color = "transparent")

# TMP
TMP_breaks <- c(0, 1, 2, 4, 6, 8, 12, 16, 20, 25, 30, 40, 60, 100, 200, Inf)
TMP_colors <- c("white", "#D6EAF8", "#AED6F1", "#5DADE2", "#2874A6", "#117A65", "#27AE60", "#A0E424", "#FFF284", "#FFAD41", "#FF950A", "#FF6A00", "#C60000", "#970000", "#9A00FF")
# Create color function
TMP_color_fun <- colorBin(palette = TMP_colors, bins = TMP_breaks, na.color = "transparent")

#etc.


#------------------------------------Load State Boundary-------------------------------------------

# Download the state boundaries and filter for Montana (state FIPS = "30")
mt_state_boundary <- states(cb = TRUE, year = 2022) %>%
  filter(STUSPS == "MT")

# Transform the CRS to match with your map (e.g., EPSG:4326)
mt_state_boundary <- st_transform(mt_state_boundary, crs = "EPSG:4326")

#------------------------------------Load County Boundaries-------------------------------------------

# Download all U.S. counties, then filter for Montana (state FIPS = "30")
mt_counties <- counties(state = "MT", cb = TRUE, year = 2022)
mt_counties <- st_transform(mt_counties, crs = "EPSG:4326")
